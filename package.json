{
  "name": "rasterfari-wms",
  "config": {
    "dockerRegistryPath": "cismet"
  },
  "version": "22.5.3",
  "keywords": [
    "raster",
    "documents",
    "server",
    "wms",
    "ogc"
  ],
  "description": "it is like a webserver for your georeferenced rasterdocuments, but it understands the OGC WMS standard (a kind of)",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/cismet/rasterfari.git"
  },
  "author": "helllth",
  "contributors": [],
  "dependencies": {
    "async": "^2.6.0",
    "file-type": "^10.0.0",
    "mkdir-recursive": "^0.4.0",
    "read-chunk": "^3.0.0",
    "restify": "^6.3.4",
    "restify-cors-middleware": "^1.1.1",
    "restify-errors": "^6.1.1"
  },
  "scripts": {
    "debug": "nodemon server.js --exec babel-node --inspect=0.0.0.0:9229 --watch",
    "start": "pm2-dev start app.json",
    "production-run": "pm2-docker -i 20 start app.js 2>&1 | tee -a /app/logs/production-run.log && nexec /bin/sh -c \"trap : TERM INT; (while true; do sleep 1000; done) & wait\"",
    "build:docker": "VERSION=`echo $npm_package_version| sed 's/\\.[0-9]*-SNAPSHOT.*$/-SNAPSHOT/'`; docker build  -t cismet/$npm_package_name -t cismet/$npm_package_name:latest -t cismet/$npm_package_name:$VERSION .",
    "publish:docker": "yarn run build:docker; VERSION=`echo $npm_package_version| sed 's/\\.[0-9]*-SNAPSHOT.*$/-SNAPSHOT/'`; docker tag cismet/$npm_package_name:$VERSION $npm_package_config_dockerRegistryPath/$npm_package_name:$VERSION ;docker tag cismet/$npm_package_name:$VERSION $npm_package_config_dockerRegistryPath/$npm_package_name:latest && docker push $npm_package_config_dockerRegistryPath/$npm_package_name:$VERSION"
  },
  "devDependencies": {
    "babel-cli": "^6.26.0",
    "babel-preset-es2015": "^6.24.1",
    "nodemon": "^1.17.1",
    "pm2": "^3.0.3",
    "rimraf": "^2.6.2"
  }
}
